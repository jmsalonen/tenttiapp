[{"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\index.js":"1","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\App.js":"2","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\reportWebVitals.js":"3","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Header.js":"4","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Users.js":"5","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Exam.js":"6","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Question.js":"7","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\QuestionEdit.js":"8","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\QuestionUser.js":"9","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\LogIn.js":"10","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Home.js":"11","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Register.js":"12","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Course.js":"13","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\CourseUser.js":"14","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\CourseEdit.js":"15","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Footer.js":"16","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Dropzone.js":"17"},{"size":500,"mtime":1611128279946,"results":"18","hashOfConfig":"19"},{"size":3836,"mtime":1611238648564,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":1332,"mtime":1611231015771,"results":"22","hashOfConfig":"19"},{"size":2274,"mtime":1609021106062,"results":"23","hashOfConfig":"19"},{"size":4589,"mtime":1611216417140,"results":"24","hashOfConfig":"19"},{"size":1109,"mtime":1610524405953,"results":"25","hashOfConfig":"19"},{"size":3945,"mtime":1611235443254,"results":"26","hashOfConfig":"19"},{"size":2744,"mtime":1610940474360,"results":"27","hashOfConfig":"19"},{"size":741,"mtime":1609750838096,"results":"28","hashOfConfig":"19"},{"size":1848,"mtime":1611218308040,"results":"29","hashOfConfig":"19"},{"size":1367,"mtime":1609751798533,"results":"30","hashOfConfig":"19"},{"size":1038,"mtime":1611215958293,"results":"31","hashOfConfig":"19"},{"size":1901,"mtime":1610962914603,"results":"32","hashOfConfig":"19"},{"size":2266,"mtime":1611216108149,"results":"33","hashOfConfig":"19"},{"size":417,"mtime":1610592434881,"results":"34","hashOfConfig":"19"},{"size":968,"mtime":1610893565862,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1uw66iz",{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"38"},"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\index.js",[],["83","84"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\App.js",["85","86","87","88","89","90"],"import './App.css';\nimport { useEffect, useState } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport axios from 'axios'\n\n//import Users from './Users.js'\nimport Header from './Header.js'\nimport Exam from './Exam.js'\nimport LogIn from './LogIn.js'\nimport Home from './Home.js'\nimport Register from './Register.js'\nimport Course from './Course.js'\nimport Footer from './Footer.js'\nimport Dropzone from './Dropzone.js'\n\nimport { IntlProvider } from \"react-intl\";\nimport messages_fi from \"./translations/fi.json\";\nimport messages_en from \"./translations/en.json\";\n\nconst messages = {\n  'fi': messages_fi,\n  'en': messages_en\n}\n\nconst ws = new WebSocket(\"ws://localhost:3002\")\n\nconst App = () => {\n  const [token, setToken] = useState(localStorage.getItem('token'))\n  const [isLogged, setIsLogged] = useState(false)\n  const [profile, setProfile] = useState(JSON.parse(localStorage.getItem('profile')))\n  const [language, setLanguage] = useState('fi')\n  \n  const changeLanguage = () => {\n    language === 'en' ? setLanguage('fi') : setLanguage('en')\n  }\n\n  const getProfile = async () => {\n    await axios\n      .get(`http://localhost:3001/user/profile`, {\n        headers: {\n          'authorization': `${token}`\n        }\n      })\n      .then(response => {\n        setProfile(response.data)\n        localStorage.setItem('profile', JSON.stringify(response.data))\n        console.log(response.data)\n    })\n  }\n\n  const logIn = async (userEmail, userPassword) => {\n    const data = {\n      email: userEmail,\n      password: userPassword\n    }\n    await axios\n      .post(`http://localhost:3001/login`, data)\n      .then(response => {\n        setToken(response.data.token)\n        localStorage.setItem('token', response.data.token)\n        getProfile()\n        ws.send(JSON.stringify({ type: 'login', message: `User ${userEmail} logged in!` }))\n      })\n      .catch(() => {\n        console.log('Log in Error')\n      })\n  }\n\n  const logOut = async () => {\n    localStorage.removeItem('token')\n    localStorage.removeItem('profile')\n    localStorage.removeItem('course')\n    localStorage.removeItem('exam')\n    setToken(null)\n    setProfile(null)\n    setIsLogged(false)\n  }\n\n  useEffect(() => {\n    const myProfile = JSON.parse(localStorage.getItem('profile'))\n    console.log(myProfile)\n    ws.onopen = (e) => {\n      console.log(\"WS opened\")\n    }\n    ws.onclose = (e) => {\n      console.log(\"WS closed\")\n    }\n    ws.onmessage = (e) => {\n      if (myProfile) {\n        const data = JSON.parse(e.data)\n        if (data.type == 'login' && myProfile.usertype == 'teacher') \n          alert(data.message)\n        else if (data.type == 'edit' && myProfile.usertype == 'student')\n          alert(data.message)\n        else if (data.type == 'all')\n          alert(data.message)\n      }\n      else {\n        console.log('no profile')\n      }\n    }\n    \n    if (token === null) {\n      setIsLogged(false)\n    }\n    else\n      setIsLogged(true)\n\n    if (isLogged) {\n      getProfile() \n    }\n  }, [token])\n\n  return (\n    <Router>\n      <IntlProvider messages={messages[language]}>\n        <Header token={token} logOut={logOut} changeLanguage={changeLanguage} websocket={ws} />\n        <Switch>\n          <Route path=\"/exam\">\n            <Exam token={token} profile={profile} />\n          </Route>\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n          <Route path=\"/course\">\n            <Course token={token} />\n          </Route>\n          <Route path=\"/dropzone\">\n            <Dropzone />\n          </Route>\n          <Route path=\"/\">\n            {isLogged ? <Home token={token} profile={profile} /> : <LogIn logIn={logIn} />}\n          </Route>\n        </Switch>\n        <Footer locale={language} />\n      </IntlProvider>\n    </Router>\n  )\n}\n\nexport default App;\n","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\reportWebVitals.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Header.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Users.js",[],["91","92"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Exam.js",["93","94","95"],"import { useEffect, useState } from 'react'\r\nimport uuid from 'react-uuid'\r\nimport { Button } from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\nimport Question from './Question.js'\r\n\r\n\r\nconst Exam = ({ token, profile }) => {\r\n  const { path, url } = useRouteMatch()\r\n  const [myToken, setMyToken] = useState(token)\r\n  const [myProfile, setMyProfile] = useState(profile)\r\n  const [courseId, setCourseId] = useState(localStorage.getItem('course'))\r\n  const [exam, setExam] = useState([])\r\n  const [examId, setExamId] = useState(localStorage.getItem('exam'))\r\n\r\n\r\n  const getToken = async () => {\r\n    setMyToken(localStorage.getItem('token'))\r\n  }\r\n\r\n  const getProfile = async () => {\r\n    await axios\r\n      .get(`http://localhost:3001/user/profile`, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        setMyProfile(response.data)\r\n    })\r\n  }\r\n\r\n  const getExam = async () => {\r\n    const data = {\r\n      user: myProfile.id,\r\n      course: courseId\r\n    }\r\n    await axios\r\n      .put(`http://localhost:3001/course/exam`, data)\r\n      .then(response => {\r\n        setExam(response.data)\r\n    })\r\n  }\r\n\r\n  const deleteExam = async () => {\r\n    const data = {\r\n      id: examId\r\n    }\r\n    await axios.put(`http://localhost:3001/deleteexam/`, data)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!myToken)\r\n      getToken()\r\n    if (!myProfile)\r\n      getProfile()\r\n    if (myProfile)\r\n      getExam()\r\n  }, [myToken, myProfile])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('exam', examId)\r\n    console.log('examjs examid', examId)\r\n  }, [examId])\r\n\r\n  if (!myProfile) \r\n    return <>.</>\r\n  return (\r\n    <div className=\"Tenttilista\">\r\n      <div>\r\n        {exam.map((item, index) =>  \r\n          <Button\r\n            //key={uuid()} \r\n            component={Link} \r\n            to={`${url}/${index+1}`}\r\n            onClick={() => (setExamId(item.id))}\r\n            color=\"primary\">\r\n              {item.name}\r\n          </Button>)}\r\n        {myProfile.usertype === \"teacher\" ? <Button color=\"primary\" > + </Button> : \"\"}\r\n      </div>\r\n      <Switch>\r\n        <Route exact path={path}>\r\n        </Route>\r\n        <Route path={`${path}/:examid`}> \r\n        {/* <Route path={`${path}/question`}> */}\r\n          <Question token={myToken} profile={myProfile} examid={examId} />\r\n        </Route>\r\n      </Switch>\r\n      {myProfile.usertype === \"teacher\" ? <div className=\"sulkuNappi\"><Button onClick={deleteExam} color=\"secondary\" > <FormattedMessage id=\"exam.remove\" /> </Button> </div> : \"\"}\r\n    </div>\r\n  )\r\n  \r\n\r\n/*   const { path, url } = useRouteMatch()\r\n  const [exam, setExam] = useState([])\r\n  const [examId, setExamId] = useState(0)\r\n  const [userType, setUserType] = useState(\"\")\r\n\r\n  const getUser = async () => {\r\n    await axios\r\n      .get(`http://localhost:3001/user/${userid}`)\r\n      .then(response => {\r\n        setUserType(response.data[0].usertype)\r\n      })\r\n  }\r\n\r\n  const getExam = async () => {\r\n    const data = {\r\n      user: userid,\r\n      course: courseid\r\n    }\r\n    await axios\r\n      .put(`http://localhost:3001/course/exam`, data)\r\n      .then(response => {\r\n        setExam(response.data)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUser()\r\n    getExam()\r\n  }, [])\r\n  \r\n  if (exam.length < 1)\r\n    return <> {\"\"} </>\r\n  if (exam.length > 0)\r\n    if (exam[0].id === null)\r\n      return <> {\"\"} </>\r\n    else \r\n      return (\r\n        <div className=\"Tenttilista\">\r\n          <div>\r\n            {exam.map(item => \r\n              <Button \r\n                key={uuid()} \r\n                component={Link} \r\n                // to={`${url}/${item.id}`}  \r\n                to={`${url}/question`}\r\n                onClick={() => setExamId(item.id)}\r\n                color=\"primary\">\r\n                  {item.name}\r\n              </Button>)}\r\n            {userType === \"teacher\" ? <div className=\"sulkuNappi\"><Button color=\"primary\" > + </Button> </div> : \"\"}\r\n          </div>\r\n          <Switch>\r\n            <Route exact path={path}>\r\n            </Route>\r\n            {// <Route path={`${path}/:examid`}> }\r\n            <Route path={`${path}/question`}>\r\n              <Question userid={userid} courseid={courseid} examid={examId}/>\r\n            </Route>\r\n          </Switch>\r\n          {userType === \"teacher\" ? <div className=\"sulkuNappi\"><Button color=\"secondary\" >Poista Tentti</Button> </div> : \"\"}\r\n        </div>\r\n      ) */\r\n}\r\n\r\nexport default Exam","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Question.js",["96"],"import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport QuestionEdit from './QuestionEdit.js'\r\nimport QuestionUser from './QuestionUser.js'\r\n\r\nconst Question = ({ token, profile, examid }) => {\r\n  const [myToken, setMyToken] = useState(token)\r\n  const [myProfile, setMyProfile] = useState(profile)\r\n  const [examId, setExamId] = useState(examid)\r\n\r\n\r\n  const getToken = async () => {\r\n    setMyToken(localStorage.getItem('token'))\r\n  }\r\n\r\n  const getProfile = async () => {\r\n    await axios\r\n      .get(`http://localhost:3001/user/profile`, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        setMyProfile(response.data)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!token)\r\n      getToken()\r\n    if (!profile)\r\n      getProfile()\r\n    if (!examId)\r\n      setExamId(localStorage.getItem('exam'))\r\n  }, [myToken, myProfile])\r\n  \r\n  return (\r\n    myProfile.usertype === 'teacher' \r\n    ? <QuestionEdit examid={examId} /> \r\n    : <QuestionUser examid={examId} userid={myProfile.id} />\r\n  )\r\n}\r\n\r\nexport default Question","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\QuestionEdit.js",["97","98","99"],"import { useEffect, useState } from 'react'\r\nimport uuid from 'react-uuid'\r\nimport { Button, Card, TextField, Checkbox } from '@material-ui/core'\r\nimport { green } from '@material-ui/core/colors'\r\nimport axios from 'axios'\r\nimport {\r\n  useRouteMatch,\r\n  useParams\r\n} from \"react-router-dom\"\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\nconst QuestionEdit = ({ examid }) => {\r\n\r\n  useRouteMatch()\r\n  //const { examid } = useParams()\r\n\r\n  const [question, setQuestion] = useState([]) \r\n  const [choice, setChoice] = useState([]) \r\n  const [refresh, setRefresh] = useState(false)\r\n\r\n  const getQuestion = async () => {\r\n    await axios\r\n      .get(`http://localhost:3001/exam/${examid}/question`)\r\n      .then(response => {\r\n        setQuestion(response.data)\r\n    })\r\n  }\r\n\r\n  const getChoice = async () => {\r\n    await axios\r\n      .get(`http://localhost:3001/exam/${examid}/choice`)\r\n      .then(response => {\r\n        setChoice(response.data)\r\n    })\r\n  }\r\n\r\n  const deleteQuestion = async (id) => {\r\n    await axios.delete(`http://localhost:3001/delete/question/${id}`)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const deleteChoice = async (id) => {\r\n    await axios.delete(`http://localhost:3001/delete/choice/${id}`)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const addChoice = async (id) => {\r\n    const data = {\r\n      id: id,\r\n      examid: examid\r\n    } \r\n    await axios.put(`http://localhost:3001/edit/add/choice/`, data)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const postQuestion = async () => {\r\n    await axios.post(`http://localhost:3001/add/question/${examid}`)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const putQuestion = async (id, value) => {\r\n    const data = {\r\n      id: id,\r\n      name: value,\r\n      examid: examid\r\n    }\r\n    await axios.put(`http://localhost:3001/edit/update/question/`, data)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const putChoice = async (id, value) => {\r\n    const data = {\r\n      id: id,\r\n      name: value,\r\n      examid: examid\r\n    }\r\n    await axios.put(`http://localhost:3001/edit/update/choice/`, data)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const putCorrect = async (id, value) => {\r\n    const data = {\r\n      id: id,\r\n      correct: value,\r\n      examid: examid\r\n    }\r\n    await axios.put(`http://localhost:3001/edit/update/correct/`, data)\r\n    setRefresh(!refresh)\r\n  } \r\n\r\n  useEffect(() => {\r\n    getQuestion()\r\n    getChoice()\r\n  }, [refresh, examid])\r\n\r\n  //console.log('question length: ', question.length)\r\n  \r\n  if (question.length < 1) {\r\n    return <></>\r\n  }\r\n  return (\r\n    <>\r\n      {question.map(q => \r\n        <Card className=\"kortti\"> \r\n          <div className=\"sulkuNappi\">\r\n            <Button onClick={() => deleteQuestion(q.id)} color=\"secondary\" >×</Button>\r\n          </div>\r\n          <TextField \r\n            defaultValue={q.question}\r\n            style={ {width: '90%'} }\r\n            onBlur={ (e) => putQuestion(q.id, e.target.value) } \r\n          />\r\n          {choice.filter(filtered => (filtered.questionid === q.id && filtered.id !== null)).map(c => \r\n            <div> \r\n              <Checkbox\r\n                //key={uuid()} \r\n                checked={c.correct}\r\n                style={{ color: green[500] }}\r\n                //id={uuid()}\r\n                name={q.question + \" \" + q.id} \r\n                onChange={ (e) => putCorrect(c.id, e.target.checked) } \r\n              />\r\n              <TextField \r\n                defaultValue={c.choice}\r\n                style={ {width: '50%'} } \r\n                onBlur={ (e) => putChoice(c.id, e.target.value) } \r\n              />\r\n              <Button onClick={() => deleteChoice(c.id)} color=\"secondary\" >×</Button>\r\n            </div>\r\n          )}\r\n          <Button onClick={() => addChoice(q.id)} color=\"primary\" >+</Button>\r\n        </Card>\r\n      )}\r\n      <><Button onClick={postQuestion} color=\"primary\" > <FormattedMessage id=\"question.newquestion\" /> </Button></>\r\n    </>\r\n  )  \r\n} \r\n\r\nexport default QuestionEdit\r\n","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\QuestionUser.js",["100","101","102","103","104","105","106"],"import { useEffect, useState } from 'react'\r\nimport uuid from 'react-uuid'\r\nimport { Button, Card, TextField, Checkbox } from '@material-ui/core'\r\nimport { green } from '@material-ui/core/colors'\r\nimport axios from 'axios'\r\nimport {\r\n  useRouteMatch,\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\nconst QuestionUser = ({examid, userid}) => {\r\n\r\n  const [question, setQuestion] = useState([]) \r\n  const [choice, setChoice] = useState([]) \r\n  const [finished, setFinished] = useState(false)\r\n  const [answer, setAnswer] = useState([])\r\n  const [refresh, setRefresh] = useState(false)\r\n  \r\n  const getQuestion = async () => {\r\n    await axios\r\n      .get(`http://localhost:3001/exam/${examid}/question`)\r\n      .then(response => {\r\n        setQuestion(response.data)\r\n    })\r\n  }\r\n\r\n  const getChoice = async () => {\r\n    await axios\r\n      .get(`http://localhost:3001/exam/${examid}/answer/${userid}`)\r\n      .then(response => {\r\n        setChoice(response.data)\r\n        //setFinished(response.data[0].finished)\r\n        //console.log(response.data[0])\r\n    })\r\n  }\r\n\r\n  const putAnswer = async (id, value) => {\r\n    const data = {\r\n      exam: examid,\r\n      user: userid,\r\n      choice: id,\r\n      value: value\r\n    }\r\n    await axios.put(`http://localhost:3001/update/answer/`, data)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const putFinished = async () => {\r\n    const data = {\r\n      exam: examid,\r\n      user: userid\r\n    }\r\n    await axios.put(`http://localhost:3001/finished/`, data)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getQuestion()\r\n    getChoice()\r\n  }, [refresh, examid])\r\n\r\n  return (\r\n    <div>\r\n      {question.map(q => \r\n        <Card key={uuid()} className=\"kortti\"> \r\n          <div>\r\n            {q.question}\r\n            {/* // if finished then checkicon else blockicon */}\r\n          </div>\r\n          {choice.filter(filtered => (filtered.questionid === q.id && filtered.choiceid !== null)).map(c => \r\n            <div key={uuid()}>\r\n              <Checkbox\r\n                /* checked={c.answer}\r\n                disabled={ finished }\r\n                id={uuid()} */\r\n                /* onChange={ (e) => putCorrectChoice(c.choiceid, e.target.checked) }  */\r\n                checked={c.answer}\r\n                disabled={ finished }\r\n                onChange={ (e) => putAnswer(c.choiceid, e.target.checked) } \r\n              />\r\n              <Checkbox \r\n                style={{ color: green[500] }}\r\n                checked={c.correct}\r\n              /> \r\n              <label>{c.name}</label>\r\n            </div>\r\n          )}\r\n        </Card>\r\n      )}\r\n      <><Button onClick={putFinished} variant=\"contained\" color=\"primary\" > Valmis </Button></>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuestionUser\r\n",["107","108"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\LogIn.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Home.js",["109"],"import { useEffect, useState } from 'react'\r\nimport { Button, Card } from '@material-ui/core'\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios'\r\n\r\nconst Home = ({ token, profile }) => {\r\n  const [myToken, setMyToken] = useState(token)\r\n  const [myProfile, setMyProfile] = useState(profile)\r\n  const [myCourse, setMyCourse] = useState([])\r\n  \r\n  const getToken = async () => {\r\n    setMyToken(localStorage.getItem('token'))\r\n  }\r\n\r\n  const getProfile = async () => {\r\n    axios\r\n      .get(`http://localhost:3001/user/profile`, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        setMyProfile(response.data)\r\n        localStorage.setItem('profile', JSON.stringify(response.data))\r\n    })\r\n  }\r\n\r\n  const getMyCourse = async () => {\r\n    const data = {\r\n      id: myProfile.id\r\n    }\r\n    await axios\r\n      .put(`http://localhost:3001/mycourse`, data)\r\n      .then(response => {\r\n        setMyCourse(response.data)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!myToken)\r\n      getToken()\r\n    if (!myProfile)\r\n      getProfile()\r\n    if (myProfile)\r\n      getMyCourse()\r\n  }, [myToken, myProfile])\r\n\r\n  const pickCourse = (courseId) => {\r\n    localStorage.setItem('course', courseId)\r\n    console.log('picked', courseId)\r\n  }\r\n\r\n  if (!myProfile)\r\n    return <></>\r\n  if (!myProfile.id)\r\n    return <></>\r\n  return (\r\n    <div className=\"Tenttilista\">\r\n      <Card className=\"kortti\">\r\n        <div>\r\n          {myProfile.id} | {myProfile.name} | {myProfile.email} | {myProfile.usertype} <br />\r\n        </div>\r\n        <div>\r\n        {myCourse.map(item => <div>\r\n          <Button component={Link} to=\"/exam\" onClick={() => pickCourse(item.id)}> {item.name} </Button>\r\n        </div>)}\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Register.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Course.js",["110"],"import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport CourseEdit from './CourseEdit.js'\r\nimport CourseUser from './CourseUser.js'\r\n\r\nconst Course = ({ token, profile }) => {\r\n  const [myToken, setMyToken] = useState(token)\r\n  const [myProfile, setMyProfile] = useState(profile)\r\n\r\n  const getToken = async () => {\r\n    setMyToken(localStorage.getItem('token'))\r\n  }\r\n\r\n  const getProfile = async () => {\r\n    axios\r\n      .get(`http://localhost:3001/user/profile`, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        setMyProfile(response.data)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!myToken)\r\n      getToken()\r\n    if (!myProfile)\r\n      getProfile()\r\n  }, [myToken, myProfile])\r\n\r\n  if (myProfile === undefined)\r\n    return <></>\r\n\r\n  return (\r\n    myProfile.usertype === 'teacher' \r\n    ? <CourseEdit token={myToken} profile={myProfile} /> \r\n    : <CourseUser token={myToken} profile={myProfile} />\r\n  )\r\n}\r\n\r\nexport default Course\r\n","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\CourseUser.js",["111","112","113"],"import { useEffect, useState } from 'react'\r\nimport uuid from 'react-uuid'\r\nimport { Button, TextField, Card } from '@material-ui/core'\r\nimport axios from 'axios'\r\n\r\nconst CourseUser = ({ token, profile }) => {\r\n  const [myCourse, setMyCourse] = useState([])\r\n  const [otherCourse, setOtherCourse] = useState([])\r\n  const [refresh, setRefresh] = useState(false)\r\n\r\n  const getMyCourse = async () => {\r\n    const data = {\r\n      id: profile.id\r\n    }\r\n    await axios\r\n      .put(`http://localhost:3001/mycourse`, data)\r\n      .then(response => {\r\n        setMyCourse(response.data)\r\n    })\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const getOtherCourse = async () => {\r\n    const data = {\r\n      id: profile.id\r\n    }\r\n    await axios\r\n      .put(`http://localhost:3001/othercourse`, data)\r\n      .then(response => {\r\n        setOtherCourse(response.data)\r\n    })\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const joinCourse = async (courseId) => {\r\n    const data = {\r\n      userid: profile.id,\r\n      courseid: courseId\r\n    }\r\n    console.log(courseId)\r\n    await axios.put(`http://localhost:3001/joincourse`, data)\r\n    setRefresh(!refresh)\r\n  }\r\n  const leaveCourse = async (courseId) => {\r\n    const data = {\r\n      userid: profile.id,\r\n      courseid: courseId\r\n    }\r\n    console.log(courseId)\r\n    await axios.put(`http://localhost:3001/leavecourse`, data)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getMyCourse()\r\n    getOtherCourse()\r\n  }, [refresh])\r\n\r\n  return (\r\n    <div className=\"Tenttilista\">\r\n      <Card className=\"kortti\">\r\n        Minun Kurssini\r\n        {myCourse.map(item => <div ><Button onClick={() => leaveCourse(item.id)}> {item.name} </Button></div>)}\r\n        <hr />\r\n        Muut Kurssit\r\n        {otherCourse.map(item => <div ><Button onClick={() => joinCourse(item.id)}> {item.name} </Button></div>)}\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CourseUser\r\n","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\CourseEdit.js",["114","115","116"],"import { useEffect, useState } from 'react'\r\nimport uuid from 'react-uuid'\r\nimport { Button, TextField, Card } from '@material-ui/core'\r\nimport axios from 'axios'\r\n\r\nconst CourseEdit = ({ token, profile }) => {\r\n  const [myCourse, setMyCourse] = useState([])\r\n  const [otherCourse, setOtherCourse] = useState([])\r\n  const [courseName, setCourseName] = useState('')\r\n  const [refresh, setRefresh] = useState(false)\r\n\r\n\r\n  const getMyCourse = async () => {\r\n    const data = {\r\n      id: profile.id\r\n    }\r\n    await axios\r\n      .put(`http://localhost:3001/mycourse`, data)\r\n      .then(response => {\r\n        setMyCourse(response.data)\r\n    })\r\n  }\r\n\r\n  const getOtherCourse = async () => {\r\n    const data = {\r\n      id: profile.id\r\n    }\r\n    await axios\r\n      .put(`http://localhost:3001/othercourse`, data)\r\n      .then(response => {\r\n        setOtherCourse(response.data)\r\n    })\r\n  }\r\n\r\n  const newCourse = async () => {\r\n    const data = {\r\n      id: profile.id,\r\n      name: courseName\r\n    }\r\n    await axios.put(`http://localhost:3001/newcourse`, data)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const deleteCourse = async (courseId) => {\r\n    const data = {\r\n      id: courseId\r\n    }\r\n    console.log(courseId)\r\n    await axios.put(`http://localhost:3001/deletecourse`, data)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  /* const getCourseData = async () => {\r\n    await getMyCourse()\r\n    await getOtherCourse()\r\n    setRefresh(!refresh)\r\n  } */\r\n\r\n  useEffect(() => {\r\n    getMyCourse()\r\n    getOtherCourse()\r\n  }, [refresh])\r\n\r\n  const pickCourse =   () => {\r\n    console.log(\"picked\")\r\n  }\r\n\r\n  return (\r\n    <div className=\"Tenttilista\">\r\n      <Card className=\"kortti\">\r\n        {myCourse.map(item => <div>\r\n          <Button onClick={pickCourse}> {item.name} </Button>\r\n          <Button onClick={() => deleteCourse(item.id)} color=\"secondary\" > × </Button>\r\n        </div>)}\r\n        <div>\r\n        <TextField \r\n          label={\"Kurssin Nimi\"}\r\n          style={ {width: '50%'} } \r\n          onChange={ (e) => setCourseName(e.target.value) } \r\n        />\r\n        </div>\r\n        <Button \r\n          onClick={newCourse} \r\n          color=\"primary\" >\r\n            Uusi Kurssi\r\n        </Button>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CourseEdit\r\n","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Footer.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Dropzone.js",["117"],"import React, {useCallback} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport axios from 'axios'\r\n\r\nconst Dropzone = () => {\r\n  const onDrop = useCallback(files => {\r\n    const config = { headers: { 'Content-Type': 'multipart/form-data' } };\r\n    let fd = new FormData();\r\n    let manyFiles = false\r\n    files.map((file, index) => {\r\n      fd.append('file', file)\r\n      if (index > 0)\r\n        manyFiles = true\r\n    });\r\n    manyFiles ? axios.post(`http://localhost:3001/upload-many`, fd, config)\r\n              : axios.post(`http://localhost:3001/upload-one`, fd, config)\r\n  }, []);\r\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n  return (\r\n    <div {...getRootProps()}>\r\n      <input {...getInputProps()} />\r\n      {\r\n        isDragActive ?\r\n          <p>Drop the files here ...</p> :\r\n          <p>Drag 'n' drop some files here, or click to select files</p>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dropzone\r\n",{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":95,"column":23,"nodeType":"124","messageId":"125","endLine":95,"endColumn":25},{"ruleId":"122","severity":1,"message":"123","line":95,"column":56,"nodeType":"124","messageId":"125","endLine":95,"endColumn":58},{"ruleId":"122","severity":1,"message":"123","line":97,"column":28,"nodeType":"124","messageId":"125","endLine":97,"endColumn":30},{"ruleId":"122","severity":1,"message":"123","line":97,"column":60,"nodeType":"124","messageId":"125","endLine":97,"endColumn":62},{"ruleId":"122","severity":1,"message":"123","line":99,"column":28,"nodeType":"124","messageId":"125","endLine":99,"endColumn":30},{"ruleId":"126","severity":1,"message":"127","line":116,"column":6,"nodeType":"128","endLine":116,"endColumn":13,"suggestions":"129"},{"ruleId":"118","replacedBy":"130"},{"ruleId":"120","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":12},{"ruleId":"132","severity":1,"message":"136","line":20,"column":20,"nodeType":"134","messageId":"135","endLine":20,"endColumn":31},{"ruleId":"126","severity":1,"message":"137","line":67,"column":6,"nodeType":"128","endLine":67,"endColumn":26,"suggestions":"138"},{"ruleId":"126","severity":1,"message":"139","line":36,"column":6,"nodeType":"128","endLine":36,"endColumn":26,"suggestions":"140"},{"ruleId":"132","severity":1,"message":"133","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":12},{"ruleId":"132","severity":1,"message":"141","line":8,"column":3,"nodeType":"134","messageId":"135","endLine":8,"endColumn":12},{"ruleId":"126","severity":1,"message":"142","line":94,"column":6,"nodeType":"128","endLine":94,"endColumn":23,"suggestions":"143"},{"ruleId":"132","severity":1,"message":"144","line":3,"column":24,"nodeType":"134","messageId":"135","endLine":3,"endColumn":33},{"ruleId":"132","severity":1,"message":"145","line":7,"column":3,"nodeType":"134","messageId":"135","endLine":7,"endColumn":16},{"ruleId":"132","severity":1,"message":"141","line":8,"column":3,"nodeType":"134","messageId":"135","endLine":8,"endColumn":12},{"ruleId":"132","severity":1,"message":"146","line":15,"column":20,"nodeType":"134","messageId":"135","endLine":15,"endColumn":31},{"ruleId":"132","severity":1,"message":"147","line":16,"column":10,"nodeType":"134","messageId":"135","endLine":16,"endColumn":16},{"ruleId":"132","severity":1,"message":"148","line":16,"column":18,"nodeType":"134","messageId":"135","endLine":16,"endColumn":27},{"ruleId":"126","severity":1,"message":"142","line":60,"column":6,"nodeType":"128","endLine":60,"endColumn":23,"suggestions":"149"},{"ruleId":"118","replacedBy":"150"},{"ruleId":"120","replacedBy":"151"},{"ruleId":"126","severity":1,"message":"152","line":46,"column":6,"nodeType":"128","endLine":46,"endColumn":26,"suggestions":"153"},{"ruleId":"126","severity":1,"message":"154","line":32,"column":6,"nodeType":"128","endLine":32,"endColumn":26,"suggestions":"155"},{"ruleId":"132","severity":1,"message":"133","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":12},{"ruleId":"132","severity":1,"message":"144","line":3,"column":18,"nodeType":"134","messageId":"135","endLine":3,"endColumn":27},{"ruleId":"126","severity":1,"message":"156","line":57,"column":6,"nodeType":"128","endLine":57,"endColumn":15,"suggestions":"157"},{"ruleId":"132","severity":1,"message":"133","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":12},{"ruleId":"132","severity":1,"message":"158","line":8,"column":10,"nodeType":"134","messageId":"135","endLine":8,"endColumn":21},{"ruleId":"126","severity":1,"message":"156","line":62,"column":6,"nodeType":"128","endLine":62,"endColumn":15,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":10,"column":29,"nodeType":"162","messageId":"163","endLine":10,"endColumn":31},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getProfile' and 'isLogged'. Either include them or remove the dependency array.","ArrayExpression",["166"],["164"],["165"],"no-unused-vars","'uuid' is defined but never used.","Identifier","unusedVar","'setCourseId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getExam' and 'getProfile'. Either include them or remove the dependency array.",["167"],"React Hook useEffect has missing dependencies: 'examId', 'getProfile', 'profile', and 'token'. Either include them or remove the dependency array.",["168"],"'useParams' is defined but never used.","React Hook useEffect has missing dependencies: 'getChoice' and 'getQuestion'. Either include them or remove the dependency array.",["169"],"'TextField' is defined but never used.","'useRouteMatch' is defined but never used.","'setFinished' is assigned a value but never used.","'answer' is assigned a value but never used.","'setAnswer' is assigned a value but never used.",["170"],["164"],["165"],"React Hook useEffect has missing dependencies: 'getMyCourse' and 'getProfile'. Either include them or remove the dependency array.",["171"],"React Hook useEffect has a missing dependency: 'getProfile'. Either include it or remove the dependency array.",["172"],"React Hook useEffect has missing dependencies: 'getMyCourse' and 'getOtherCourse'. Either include them or remove the dependency array.",["173"],"'otherCourse' is assigned a value but never used.",["174"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"181","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"188","fix":"190"},"Update the dependencies array to be: [getProfile, isLogged, token]",{"range":"191","text":"192"},"Update the dependencies array to be: [myToken, myProfile, getProfile, getExam]",{"range":"193","text":"194"},"Update the dependencies array to be: [myToken, myProfile, token, profile, getProfile, examId]",{"range":"195","text":"196"},"Update the dependencies array to be: [refresh, examid, getQuestion, getChoice]",{"range":"197","text":"198"},{"range":"199","text":"198"},"Update the dependencies array to be: [myToken, myProfile, getProfile, getMyCourse]",{"range":"200","text":"201"},"Update the dependencies array to be: [myToken, myProfile, getProfile]",{"range":"202","text":"203"},"Update the dependencies array to be: [getMyCourse, getOtherCourse, refresh]",{"range":"204","text":"205"},{"range":"206","text":"205"},[3032,3039],"[getProfile, isLogged, token]",[1603,1623],"[myToken, myProfile, getProfile, getExam]",[895,915],"[myToken, myProfile, token, profile, getProfile, examId]",[2369,2386],"[refresh, examid, getQuestion, getChoice]",[1580,1597],[1162,1182],"[myToken, myProfile, getProfile, getMyCourse]",[760,780],"[myToken, myProfile, getProfile]",[1453,1462],"[getMyCourse, getOtherCourse, refresh]",[1514,1523]]