[{"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\index.js":"1","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\App.js":"2","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\reportWebVitals.js":"3","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Header.js":"4","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Users.js":"5","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Exam.js":"6","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Question.js":"7","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\QuestionEdit.js":"8","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\QuestionUser.js":"9","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\LogIn.js":"10","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Home.js":"11","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Register.js":"12","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Course.js":"13","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\CourseUser.js":"14","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\CourseEdit.js":"15","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Footer.js":"16","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Dropzone.js":"17"},{"size":500,"mtime":1611128279946,"results":"18","hashOfConfig":"19"},{"size":3187,"mtime":1611708471018,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":1174,"mtime":1611695694651,"results":"22","hashOfConfig":"19"},{"size":2274,"mtime":1609021106062,"results":"23","hashOfConfig":"19"},{"size":5200,"mtime":1611708425808,"results":"24","hashOfConfig":"19"},{"size":1138,"mtime":1611699186574,"results":"25","hashOfConfig":"19"},{"size":4805,"mtime":1611699461741,"results":"26","hashOfConfig":"19"},{"size":2744,"mtime":1610940474360,"results":"27","hashOfConfig":"19"},{"size":810,"mtime":1611606173444,"results":"28","hashOfConfig":"19"},{"size":1986,"mtime":1611697084703,"results":"29","hashOfConfig":"19"},{"size":1279,"mtime":1611606338079,"results":"30","hashOfConfig":"19"},{"size":1038,"mtime":1611215958293,"results":"31","hashOfConfig":"19"},{"size":1901,"mtime":1610962914603,"results":"32","hashOfConfig":"19"},{"size":2950,"mtime":1611622685921,"results":"33","hashOfConfig":"19"},{"size":417,"mtime":1610592434881,"results":"34","hashOfConfig":"19"},{"size":968,"mtime":1610893565862,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1uw66iz",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\index.js",[],["78","79"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\App.js",["80"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\reportWebVitals.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Header.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Users.js",[],["81","82"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Exam.js",["83","84","85"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Question.js",["86"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\QuestionEdit.js",["87","88","89","90"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\QuestionUser.js",["91","92","93","94","95","96","97"],"import { useEffect, useState } from 'react'\r\nimport uuid from 'react-uuid'\r\nimport { Button, Card, TextField, Checkbox } from '@material-ui/core'\r\nimport { green } from '@material-ui/core/colors'\r\nimport axios from 'axios'\r\nimport {\r\n  useRouteMatch,\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\nconst QuestionUser = ({examid, userid}) => {\r\n\r\n  const [question, setQuestion] = useState([]) \r\n  const [choice, setChoice] = useState([]) \r\n  const [finished, setFinished] = useState(false)\r\n  const [answer, setAnswer] = useState([])\r\n  const [refresh, setRefresh] = useState(false)\r\n  \r\n  const getQuestion = async () => {\r\n    await axios\r\n      .get(`http://localhost:3001/exam/${examid}/question`)\r\n      .then(response => {\r\n        setQuestion(response.data)\r\n    })\r\n  }\r\n\r\n  const getChoice = async () => {\r\n    await axios\r\n      .get(`http://localhost:3001/exam/${examid}/answer/${userid}`)\r\n      .then(response => {\r\n        setChoice(response.data)\r\n        //setFinished(response.data[0].finished)\r\n        //console.log(response.data[0])\r\n    })\r\n  }\r\n\r\n  const putAnswer = async (id, value) => {\r\n    const data = {\r\n      exam: examid,\r\n      user: userid,\r\n      choice: id,\r\n      value: value\r\n    }\r\n    await axios.put(`http://localhost:3001/update/answer/`, data)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const putFinished = async () => {\r\n    const data = {\r\n      exam: examid,\r\n      user: userid\r\n    }\r\n    await axios.put(`http://localhost:3001/finished/`, data)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getQuestion()\r\n    getChoice()\r\n  }, [refresh, examid])\r\n\r\n  return (\r\n    <div>\r\n      {question.map(q => \r\n        <Card key={uuid()} className=\"kortti\"> \r\n          <div>\r\n            {q.question}\r\n            {/* // if finished then checkicon else blockicon */}\r\n          </div>\r\n          {choice.filter(filtered => (filtered.questionid === q.id && filtered.choiceid !== null)).map(c => \r\n            <div key={uuid()}>\r\n              <Checkbox\r\n                /* checked={c.answer}\r\n                disabled={ finished }\r\n                id={uuid()} */\r\n                /* onChange={ (e) => putCorrectChoice(c.choiceid, e.target.checked) }  */\r\n                checked={c.answer}\r\n                disabled={ finished }\r\n                onChange={ (e) => putAnswer(c.choiceid, e.target.checked) } \r\n              />\r\n              <Checkbox \r\n                style={{ color: green[500] }}\r\n                checked={c.correct}\r\n              /> \r\n              <label>{c.name}</label>\r\n            </div>\r\n          )}\r\n        </Card>\r\n      )}\r\n      <><Button onClick={putFinished} variant=\"contained\" color=\"primary\" > Valmis </Button></>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuestionUser\r\n","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\LogIn.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Home.js",["98"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Register.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Course.js",["99"],"import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport CourseEdit from './CourseEdit.js'\r\nimport CourseUser from './CourseUser.js'\r\n\r\nconst Course = ({ token, profile }) => {\r\n  const [myToken, setMyToken] = useState(token)\r\n  const [myProfile, setMyProfile] = useState(profile)\r\n\r\n  const getToken = async () => {\r\n    setMyToken(localStorage.getItem('token'))\r\n  }\r\n\r\n  const getProfile = async () => {\r\n    axios\r\n      .get(`http://localhost:3001/user/profile`, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        setMyProfile(response.data)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!myToken)\r\n      getToken()\r\n    if (!myProfile)\r\n      getProfile()\r\n  }, [myToken, myProfile])\r\n\r\n  if (myProfile === undefined)\r\n    return <></>\r\n\r\n  return (\r\n    myProfile.usertype === 'teacher' \r\n    ? <CourseEdit token={myToken} profile={myProfile} /> \r\n    : <CourseUser token={myToken} profile={myProfile} />\r\n  )\r\n}\r\n\r\nexport default Course\r\n","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\CourseUser.js",["100","101","102"],"import { useEffect, useState } from 'react'\r\nimport uuid from 'react-uuid'\r\nimport { Button, TextField, Card } from '@material-ui/core'\r\nimport axios from 'axios'\r\n\r\nconst CourseUser = ({ token, profile }) => {\r\n  const [myCourse, setMyCourse] = useState([])\r\n  const [otherCourse, setOtherCourse] = useState([])\r\n  const [refresh, setRefresh] = useState(false)\r\n\r\n  const getMyCourse = async () => {\r\n    const data = {\r\n      id: profile.id\r\n    }\r\n    await axios\r\n      .put(`http://localhost:3001/mycourse`, data)\r\n      .then(response => {\r\n        setMyCourse(response.data)\r\n    })\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const getOtherCourse = async () => {\r\n    const data = {\r\n      id: profile.id\r\n    }\r\n    await axios\r\n      .put(`http://localhost:3001/othercourse`, data)\r\n      .then(response => {\r\n        setOtherCourse(response.data)\r\n    })\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const joinCourse = async (courseId) => {\r\n    const data = {\r\n      userid: profile.id,\r\n      courseid: courseId\r\n    }\r\n    console.log(courseId)\r\n    await axios.put(`http://localhost:3001/joincourse`, data)\r\n    setRefresh(!refresh)\r\n  }\r\n  const leaveCourse = async (courseId) => {\r\n    const data = {\r\n      userid: profile.id,\r\n      courseid: courseId\r\n    }\r\n    console.log(courseId)\r\n    await axios.put(`http://localhost:3001/leavecourse`, data)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getMyCourse()\r\n    getOtherCourse()\r\n  }, [refresh])\r\n\r\n  return (\r\n    <div className=\"Tenttilista\">\r\n      <Card className=\"kortti\">\r\n        Minun Kurssini\r\n        {myCourse.map(item => <div ><Button onClick={() => leaveCourse(item.id)}> {item.name} </Button></div>)}\r\n        <hr />\r\n        Muut Kurssit\r\n        {otherCourse.map(item => <div ><Button onClick={() => joinCourse(item.id)}> {item.name} </Button></div>)}\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CourseUser\r\n","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\CourseEdit.js",["103","104"],"import { useEffect, useState } from 'react'\r\nimport uuid from 'react-uuid'\r\nimport { Button, TextField, Card } from '@material-ui/core'\r\nimport axios from 'axios'\r\n\r\n/* LOKALISOI */\r\n\r\nconst CourseEdit = ({ token, profile }) => {\r\n  const [myToken, setMyToken] = useState(token)\r\n  const [myProfile, setMyProfile] = useState(profile)\r\n  const [course, setCourse] = useState([])\r\n  const [courseName, setCourseName] = useState('')\r\n  const [refresh, setRefresh] = useState(false)\r\n\r\n  const getToken = async () => {\r\n    setMyToken(localStorage.getItem('token'))\r\n  }\r\n\r\n  const getProfile = async () => {\r\n    await axios\r\n      .get(`http://localhost:3001/user/profile`, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        setMyProfile(response.data)\r\n        localStorage.setItem('profile', JSON.stringify(response.data))\r\n    })\r\n  }\r\n\r\n  const getCourse = async () => {\r\n    const data = {\r\n      id: myProfile.id\r\n    }\r\n    await axios\r\n      .put(`http://localhost:3001/user/course`, data, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        setCourse(response.data)\r\n    })\r\n  }\r\n\r\n  const newCourse = async () => {\r\n    if (courseName.length < 1) \r\n      return\r\n    const data = {\r\n      id: profile.id,\r\n      name: courseName\r\n    }\r\n    await axios.put(`http://localhost:3001/user/teacher/new/course`, data, {\r\n      headers: {\r\n        'authorization': `${myToken}`\r\n      }\r\n    })\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const deleteCourse = async (courseId) => {\r\n    const data = {\r\n      id: courseId\r\n    }\r\n    console.log(courseId)\r\n    await axios.put(`http://localhost:3001/user/teacher/delete/course`, data, {\r\n      headers: {\r\n        'authorization': `${myToken}`\r\n      }\r\n    })\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  /* const getCourseData = async () => {\r\n    await getMyCourse()\r\n    await getOtherCourse()\r\n    setRefresh(!refresh)\r\n  } */\r\n  useEffect(() => {\r\n    if (!myToken)\r\n      getToken()\r\n    if (!myProfile)\r\n      getProfile()\r\n    if (myProfile) \r\n      getCourse()\r\n  }, [myToken, myProfile, refresh])\r\n\r\n  const pickCourse =   () => {\r\n    console.log(\"picked\")\r\n  }\r\n\r\n  return (\r\n    <div className=\"Tenttilista\">\r\n      <Card className=\"kortti\">\r\n        {course.map(item => <div>\r\n          <Button onClick={pickCourse}> {item.name} </Button>\r\n          <Button onClick={() => deleteCourse(item.id)} color=\"secondary\" > × </Button>\r\n        </div>)}\r\n        <div>\r\n        <TextField \r\n          label={\"Kurssin Nimi\"}\r\n          style={ {width: '50%'} } \r\n          onChange={ (e) => setCourseName(e.target.value) } \r\n        />\r\n        </div>\r\n        <Button \r\n          onClick={() => {setRefresh(!refresh); newCourse()}} \r\n          color=\"primary\" >\r\n            Uusi Kurssi\r\n        </Button>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CourseEdit\r\n","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Footer.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Dropzone.js",["105"],"import React, {useCallback} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport axios from 'axios'\r\n\r\nconst Dropzone = () => {\r\n  const onDrop = useCallback(files => {\r\n    const config = { headers: { 'Content-Type': 'multipart/form-data' } };\r\n    let fd = new FormData();\r\n    let manyFiles = false\r\n    files.map((file, index) => {\r\n      fd.append('file', file)\r\n      if (index > 0)\r\n        manyFiles = true\r\n    });\r\n    manyFiles ? axios.post(`http://localhost:3001/upload-many`, fd, config)\r\n              : axios.post(`http://localhost:3001/upload-one`, fd, config)\r\n  }, []);\r\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n  return (\r\n    <div {...getRootProps()}>\r\n      <input {...getInputProps()} />\r\n      {\r\n        isDragActive ?\r\n          <p>Drop the files here ...</p> :\r\n          <p>Drag 'n' drop some files here, or click to select files</p>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dropzone\r\n",["106","107"],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":97,"column":6,"nodeType":"114","endLine":97,"endColumn":13,"suggestions":"115"},{"ruleId":"108","replacedBy":"116"},{"ruleId":"110","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":9,"column":3,"nodeType":"120","messageId":"121","endLine":9,"endColumn":11},{"ruleId":"112","severity":1,"message":"122","line":93,"column":6,"nodeType":"114","endLine":93,"endColumn":35,"suggestions":"123"},{"ruleId":"112","severity":1,"message":"124","line":97,"column":6,"nodeType":"114","endLine":97,"endColumn":24,"suggestions":"125"},{"ruleId":"112","severity":1,"message":"126","line":36,"column":6,"nodeType":"114","endLine":36,"endColumn":26,"suggestions":"127"},{"ruleId":"118","severity":1,"message":"128","line":2,"column":8,"nodeType":"120","messageId":"121","endLine":2,"endColumn":12},{"ruleId":"118","severity":1,"message":"129","line":15,"column":10,"nodeType":"120","messageId":"121","endLine":15,"endColumn":19},{"ruleId":"112","severity":1,"message":"130","line":128,"column":6,"nodeType":"114","endLine":128,"endColumn":8,"suggestions":"131"},{"ruleId":"112","severity":1,"message":"132","line":136,"column":6,"nodeType":"114","endLine":136,"endColumn":23,"suggestions":"133"},{"ruleId":"118","severity":1,"message":"134","line":3,"column":24,"nodeType":"120","messageId":"121","endLine":3,"endColumn":33},{"ruleId":"118","severity":1,"message":"135","line":7,"column":3,"nodeType":"120","messageId":"121","endLine":7,"endColumn":16},{"ruleId":"118","severity":1,"message":"136","line":8,"column":3,"nodeType":"120","messageId":"121","endLine":8,"endColumn":12},{"ruleId":"118","severity":1,"message":"137","line":15,"column":20,"nodeType":"120","messageId":"121","endLine":15,"endColumn":31},{"ruleId":"118","severity":1,"message":"138","line":16,"column":10,"nodeType":"120","messageId":"121","endLine":16,"endColumn":16},{"ruleId":"118","severity":1,"message":"139","line":16,"column":18,"nodeType":"120","messageId":"121","endLine":16,"endColumn":27},{"ruleId":"112","severity":1,"message":"140","line":60,"column":6,"nodeType":"114","endLine":60,"endColumn":23,"suggestions":"141"},{"ruleId":"112","severity":1,"message":"142","line":50,"column":6,"nodeType":"114","endLine":50,"endColumn":26,"suggestions":"143"},{"ruleId":"112","severity":1,"message":"130","line":32,"column":6,"nodeType":"114","endLine":32,"endColumn":26,"suggestions":"144"},{"ruleId":"118","severity":1,"message":"128","line":2,"column":8,"nodeType":"120","messageId":"121","endLine":2,"endColumn":12},{"ruleId":"118","severity":1,"message":"134","line":3,"column":18,"nodeType":"120","messageId":"121","endLine":3,"endColumn":27},{"ruleId":"112","severity":1,"message":"145","line":57,"column":6,"nodeType":"114","endLine":57,"endColumn":15,"suggestions":"146"},{"ruleId":"118","severity":1,"message":"128","line":2,"column":8,"nodeType":"120","messageId":"121","endLine":2,"endColumn":12},{"ruleId":"112","severity":1,"message":"142","line":87,"column":6,"nodeType":"114","endLine":87,"endColumn":35,"suggestions":"147"},{"ruleId":"148","severity":1,"message":"149","line":10,"column":29,"nodeType":"150","messageId":"151","endLine":10,"endColumn":31},{"ruleId":"108","replacedBy":"152"},{"ruleId":"110","replacedBy":"153"},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getProfile' and 'isLogged'. Either include them or remove the dependency array.","ArrayExpression",["156"],["154"],["155"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getExam' and 'getProfile'. Either include them or remove the dependency array.",["157"],"React Hook useEffect has a missing dependency: 'getExam'. Either include it or remove the dependency array.",["158"],"React Hook useEffect has missing dependencies: 'getProfile', 'profile', and 'token'. Either include them or remove the dependency array.",["159"],"'uuid' is defined but never used.","'myProfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProfile'. Either include it or remove the dependency array.",["160"],"React Hook useEffect has missing dependencies: 'getChoice', 'getProfile', and 'getQuestion'. Either include them or remove the dependency array.",["161"],"'TextField' is defined but never used.","'useRouteMatch' is defined but never used.","'useParams' is defined but never used.","'setFinished' is assigned a value but never used.","'answer' is assigned a value but never used.","'setAnswer' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getChoice' and 'getQuestion'. Either include them or remove the dependency array.",["162"],"React Hook useEffect has missing dependencies: 'getCourse' and 'getProfile'. Either include them or remove the dependency array.",["163"],["164"],"React Hook useEffect has missing dependencies: 'getMyCourse' and 'getOtherCourse'. Either include them or remove the dependency array.",["165"],["166"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["154"],["155"],"no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [getProfile, isLogged, token]",{"range":"189","text":"190"},"Update the dependencies array to be: [myToken, myProfile, refresh, getProfile, getExam]",{"range":"191","text":"192"},"Update the dependencies array to be: [examId, courseid, getExam]",{"range":"193","text":"194"},"Update the dependencies array to be: [myToken, myProfile, token, profile, getProfile]",{"range":"195","text":"196"},"Update the dependencies array to be: [getProfile]",{"range":"197","text":"198"},"Update the dependencies array to be: [refresh, examid, getProfile, getQuestion, getChoice]",{"range":"199","text":"200"},"Update the dependencies array to be: [refresh, examid, getQuestion, getChoice]",{"range":"201","text":"202"},"Update the dependencies array to be: [myToken, myProfile, getProfile, getCourse]",{"range":"203","text":"204"},"Update the dependencies array to be: [myToken, myProfile, getProfile]",{"range":"205","text":"206"},"Update the dependencies array to be: [getMyCourse, getOtherCourse, refresh]",{"range":"207","text":"208"},"Update the dependencies array to be: [myToken, myProfile, refresh, getProfile, getCourse]",{"range":"209","text":"210"},[2427,2434],"[getProfile, isLogged, token]",[2154,2183],"[myToken, myProfile, refresh, getProfile, getExam]",[2229,2247],"[examId, courseid, getExam]",[904,924],"[myToken, myProfile, token, profile, getProfile]",[3101,3103],"[getProfile]",[3229,3246],"[refresh, examid, getProfile, getQuestion, getChoice]",[1580,1597],"[refresh, examid, getQuestion, getChoice]",[1246,1266],"[myToken, myProfile, getProfile, getCourse]",[760,780],"[myToken, myProfile, getProfile]",[1453,1462],"[getMyCourse, getOtherCourse, refresh]",[2148,2177],"[myToken, myProfile, refresh, getProfile, getCourse]"]