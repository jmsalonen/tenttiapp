[{"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\index.js":"1","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\App.js":"2","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\reportWebVitals.js":"3","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Header.js":"4","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Users.js":"5","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Exam.js":"6","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Question.js":"7","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\QuestionEdit.js":"8","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\QuestionUser.js":"9","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\LogIn.js":"10","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Home.js":"11","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Register.js":"12","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Course.js":"13","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\CourseUser.js":"14","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\CourseEdit.js":"15","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Footer.js":"16"},{"size":500,"mtime":1610589372197,"results":"17","hashOfConfig":"18"},{"size":2862,"mtime":1610591355271,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":1104,"mtime":1610592647195,"results":"21","hashOfConfig":"18"},{"size":2274,"mtime":1609021106062,"results":"22","hashOfConfig":"18"},{"size":4373,"mtime":1610549264152,"results":"23","hashOfConfig":"18"},{"size":1109,"mtime":1610524405953,"results":"24","hashOfConfig":"18"},{"size":3725,"mtime":1610533889197,"results":"25","hashOfConfig":"18"},{"size":2738,"mtime":1608104035490,"results":"26","hashOfConfig":"18"},{"size":741,"mtime":1609750838096,"results":"27","hashOfConfig":"18"},{"size":1772,"mtime":1610538919343,"results":"28","hashOfConfig":"18"},{"size":1367,"mtime":1609751798533,"results":"29","hashOfConfig":"18"},{"size":1034,"mtime":1609749442925,"results":"30","hashOfConfig":"18"},{"size":1901,"mtime":1609750662635,"results":"31","hashOfConfig":"18"},{"size":2187,"mtime":1609730093759,"results":"32","hashOfConfig":"18"},{"size":417,"mtime":1610592434881,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uw66iz",{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\index.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\App.js",["76"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\reportWebVitals.js",[],["77","78"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Header.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Users.js",[],["79","80"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Exam.js",["81","82"],"import { useEffect, useState } from 'react'\r\nimport uuid from 'react-uuid'\r\nimport { Button } from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\n\r\nimport Question from './Question.js'\r\n\r\n//const Exam = ({userid, courseid}) => {\r\nconst Exam = ({ token, profile }) => {\r\n  const { path, url } = useRouteMatch()\r\n  const [myToken, setMyToken] = useState(token)\r\n  const [myProfile, setMyProfile] = useState(profile)\r\n  const [courseId, setCourseId] = useState(localStorage.getItem('course'))\r\n  const [exam, setExam] = useState([])\r\n  const [examId, setExamId] = useState(localStorage.getItem('exam'))\r\n\r\n\r\n  const getToken = async () => {\r\n    setMyToken(localStorage.getItem('token'))\r\n  }\r\n\r\n  const getProfile = async () => {\r\n    await axios\r\n      .get(`http://localhost:3001/user/profile`, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        setMyProfile(response.data)\r\n    })\r\n  }\r\n\r\n  const getExam = async () => {\r\n    const data = {\r\n      user: myProfile.id,\r\n      course: courseId\r\n    }\r\n    await axios\r\n      .put(`http://localhost:3001/course/exam`, data)\r\n      .then(response => {\r\n        setExam(response.data)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!token)\r\n      getToken()\r\n    if (!profile)\r\n      getProfile()\r\n    if (myProfile)\r\n      getExam()\r\n  }, [myToken, myProfile])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('exam', examId)\r\n    console.log('examjs examid', examId)\r\n  }, [examId])\r\n\r\n  if (!myProfile) \r\n    return <>.</>\r\n  return (\r\n    <div className=\"Tenttilista\">\r\n      <div>\r\n        {exam.map((item, index) =>  \r\n          <Button\r\n            key={uuid()} \r\n            component={Link} \r\n            to={`${url}/${index+1}`}\r\n            onClick={() => (setExamId(item.id))}\r\n            color=\"primary\">\r\n              {item.name}\r\n          </Button>)}\r\n        {myProfile.usertype === \"teacher\" ? <Button color=\"primary\" > + </Button> : \"\"}\r\n      </div>\r\n      <Switch>\r\n        <Route exact path={path}>\r\n        </Route>\r\n        <Route path={`${path}/:examid`}> \r\n        {/* <Route path={`${path}/question`}> */}\r\n          <Question token={myToken} profile={myProfile} examid={examId} />\r\n        </Route>\r\n      </Switch>\r\n      {myProfile.usertype === \"teacher\" ? <div className=\"sulkuNappi\"><Button color=\"secondary\" >Poista Tentti</Button> </div> : \"\"}\r\n    </div>\r\n  )\r\n  \r\n\r\n/*   const { path, url } = useRouteMatch()\r\n  const [exam, setExam] = useState([])\r\n  const [examId, setExamId] = useState(0)\r\n  const [userType, setUserType] = useState(\"\")\r\n\r\n  const getUser = async () => {\r\n    await axios\r\n      .get(`http://localhost:3001/user/${userid}`)\r\n      .then(response => {\r\n        setUserType(response.data[0].usertype)\r\n      })\r\n  }\r\n\r\n  const getExam = async () => {\r\n    const data = {\r\n      user: userid,\r\n      course: courseid\r\n    }\r\n    await axios\r\n      .put(`http://localhost:3001/course/exam`, data)\r\n      .then(response => {\r\n        setExam(response.data)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUser()\r\n    getExam()\r\n  }, [])\r\n  \r\n  if (exam.length < 1)\r\n    return <> {\"\"} </>\r\n  if (exam.length > 0)\r\n    if (exam[0].id === null)\r\n      return <> {\"\"} </>\r\n    else \r\n      return (\r\n        <div className=\"Tenttilista\">\r\n          <div>\r\n            {exam.map(item => \r\n              <Button \r\n                key={uuid()} \r\n                component={Link} \r\n                // to={`${url}/${item.id}`}  \r\n                to={`${url}/question`}\r\n                onClick={() => setExamId(item.id)}\r\n                color=\"primary\">\r\n                  {item.name}\r\n              </Button>)}\r\n            {userType === \"teacher\" ? <div className=\"sulkuNappi\"><Button color=\"primary\" > + </Button> </div> : \"\"}\r\n          </div>\r\n          <Switch>\r\n            <Route exact path={path}>\r\n            </Route>\r\n            {// <Route path={`${path}/:examid`}> }\r\n            <Route path={`${path}/question`}>\r\n              <Question userid={userid} courseid={courseid} examid={examId}/>\r\n            </Route>\r\n          </Switch>\r\n          {userType === \"teacher\" ? <div className=\"sulkuNappi\"><Button color=\"secondary\" >Poista Tentti</Button> </div> : \"\"}\r\n        </div>\r\n      ) */\r\n}\r\n\r\nexport default Exam","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Question.js",["83"],"import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport QuestionEdit from './QuestionEdit.js'\r\nimport QuestionUser from './QuestionUser.js'\r\n\r\nconst Question = ({ token, profile, examid }) => {\r\n  const [myToken, setMyToken] = useState(token)\r\n  const [myProfile, setMyProfile] = useState(profile)\r\n  const [examId, setExamId] = useState(examid)\r\n\r\n\r\n  const getToken = async () => {\r\n    setMyToken(localStorage.getItem('token'))\r\n  }\r\n\r\n  const getProfile = async () => {\r\n    await axios\r\n      .get(`http://localhost:3001/user/profile`, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        setMyProfile(response.data)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!token)\r\n      getToken()\r\n    if (!profile)\r\n      getProfile()\r\n    if (!examId)\r\n      setExamId(localStorage.getItem('exam'))\r\n  }, [myToken, myProfile])\r\n  \r\n  return (\r\n    myProfile.usertype === 'teacher' \r\n    ? <QuestionEdit examid={examId} /> \r\n    : <QuestionUser examid={examId} userid={myProfile.id} />\r\n  )\r\n}\r\n\r\nexport default Question","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\QuestionEdit.js",["84","85"],"import { useEffect, useState } from 'react'\r\nimport uuid from 'react-uuid'\r\nimport { Button, Card, TextField, Checkbox } from '@material-ui/core'\r\nimport { green } from '@material-ui/core/colors'\r\nimport axios from 'axios'\r\nimport {\r\n  useRouteMatch,\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\nconst QuestionEdit = ({ examid }) => {\r\n\r\n  useRouteMatch()\r\n  //const { examid } = useParams()\r\n\r\n  const [question, setQuestion] = useState([]) \r\n  const [choice, setChoice] = useState([]) \r\n  const [refresh, setRefresh] = useState(false)\r\n\r\n  const getQuestion = async () => {\r\n    await axios\r\n      .get(`http://localhost:3001/exam/${examid}/question`)\r\n      .then(response => {\r\n        setQuestion(response.data)\r\n    })\r\n  }\r\n\r\n  const getChoice = async () => {\r\n    await axios\r\n      .get(`http://localhost:3001/exam/${examid}/choice`)\r\n      .then(response => {\r\n        setChoice(response.data)\r\n    })\r\n  }\r\n\r\n  const deleteQuestion = async (id) => {\r\n    await axios.delete(`http://localhost:3001/delete/question/${id}`)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const deleteChoice = async (id) => {\r\n    await axios.delete(`http://localhost:3001/delete/choice/${id}`)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const postChoice = async (id) => {\r\n    await axios.post(`http://localhost:3001/add/choice/${id}`)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const postQuestion = async () => {\r\n    await axios.post(`http://localhost:3001/add/question/${examid}`)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const putQuestion = async (id, value) => {\r\n    const data = {\r\n      id: id,\r\n      name: value\r\n    }\r\n    await axios.put(`http://localhost:3001/update/question/`, data)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const putChoice = async (id, value) => {\r\n    const data = {\r\n      id: id,\r\n      name: value\r\n    }\r\n    await axios.put(`http://localhost:3001/update/choice/`, data)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const putCorrect = async (id, value) => {\r\n    const data = {\r\n      id: id,\r\n      correct: value\r\n    }\r\n    await axios.put(`http://localhost:3001/update/correct/`, data)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getQuestion()\r\n    getChoice()\r\n  }, [refresh, examid])\r\n\r\n  console.log('question length: ', question.length)\r\n  if (question.length < 1) {\r\n    return <></>\r\n  }\r\n  return (\r\n    <>\r\n      {question.map(q => \r\n        <Card key={uuid()} className=\"kortti\"> \r\n          <div className=\"sulkuNappi\">\r\n            <Button onClick={() => deleteQuestion(q.id)} color=\"secondary\" >×</Button>\r\n          </div>\r\n          <TextField \r\n            defaultValue={q.question}\r\n            style={ {width: '90%'} }\r\n            onBlur={ (e) => putQuestion(q.id, e.target.value) } \r\n          />\r\n          {choice.filter(filtered => (filtered.questionid === q.id && filtered.id !== null)).map(c => \r\n            <div key={uuid()}>\r\n              <Checkbox\r\n                key={uuid()} \r\n                checked={c.correct}\r\n                style={{ color: green[500] }}\r\n                id={uuid()}\r\n                name={q.question + \" \" + q.id} \r\n                onChange={ (e) => putCorrect(c.id, e.target.checked) } \r\n              />\r\n              <TextField \r\n                defaultValue={c.choice}\r\n                style={ {width: '50%'} } \r\n                onBlur={ (e) => putChoice(c.id, e.target.value) } \r\n              />\r\n              <Button onClick={() => deleteChoice(c.id)} color=\"secondary\" >×</Button>\r\n            </div>\r\n          )}\r\n          <Button onClick={() => postChoice(q.id)} color=\"primary\" >+</Button>\r\n        </Card>\r\n      )}\r\n      <><Button onClick={postQuestion} color=\"primary\" >Uusi Kysymys</Button></>\r\n    </>\r\n  )  \r\n} \r\n\r\nexport default QuestionEdit\r\n","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\QuestionUser.js",["86","87","88","89","90","91","92"],"import { useEffect, useState } from 'react'\r\nimport uuid from 'react-uuid'\r\nimport { Button, Card, TextField, Checkbox } from '@material-ui/core'\r\nimport { green } from '@material-ui/core/colors'\r\nimport axios from 'axios'\r\nimport {\r\n  useRouteMatch,\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\nconst QuestionUser = ({examid, userid}) => {\r\n\r\n  const [question, setQuestion] = useState([]) \r\n  const [choice, setChoice] = useState([]) \r\n  const [finished, setFinished] = useState(false)\r\n  const [answer, setAnswer] = useState([])\r\n  const [refresh, setRefresh] = useState(false)\r\n  \r\n  const getQuestion = async () => {\r\n    await axios\r\n      .get(`http://localhost:3001/exam/${examid}/question`)\r\n      .then(response => {\r\n        setQuestion(response.data)\r\n    })\r\n  }\r\n\r\n  const getChoice = async () => {\r\n    await axios\r\n      .get(`http://localhost:3001/exam/${examid}/answer/${userid}`)\r\n      .then(response => {\r\n        setChoice(response.data)\r\n        //setFinished(response.data[0].finished)\r\n        //console.log(response.data[0])\r\n    })\r\n  }\r\n\r\n  const putAnswer = async (id, value) => {\r\n    const data = {\r\n      exam: examid,\r\n      user: userid,\r\n      choice: id,\r\n      value: value\r\n    }\r\n    await axios.put(`http://localhost:3001/update/answer/`, data)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const putFinished = async () => {\r\n    const data = {\r\n      exam: examid,\r\n      user: userid\r\n    }\r\n    await axios.put(`http://localhost:3001/finished/`, data)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getQuestion()\r\n    getChoice()\r\n  }, [refresh, examid])\r\n\r\n  return (\r\n    <>\r\n      {question.map(q => \r\n        <Card key={uuid()} className=\"kortti\"> \r\n          <div>\r\n            {q.question}\r\n            {/* // if finished then checkicon else blockicon */}\r\n          </div>\r\n          {choice.filter(filtered => (filtered.questionid === q.id && filtered.choiceid !== null)).map(c => \r\n            <div key={uuid()}>\r\n              <Checkbox\r\n                /* checked={c.answer}\r\n                disabled={ finished }\r\n                id={uuid()} */\r\n                /* onChange={ (e) => putCorrectChoice(c.choiceid, e.target.checked) }  */\r\n                checked={c.answer}\r\n                disabled={ finished }\r\n                onChange={ (e) => putAnswer(c.choiceid, e.target.checked) } \r\n              />\r\n              <Checkbox \r\n                style={{ color: green[500] }}\r\n                checked={c.correct}\r\n              /> \r\n              <label>{c.name}</label>\r\n            </div>\r\n          )}\r\n        </Card>\r\n      )}\r\n      <><Button onClick={putFinished} variant=\"contained\" color=\"primary\" > Valmis </Button></>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default QuestionUser\r\n","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\LogIn.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Home.js",["93"],"import { useEffect, useState } from 'react'\r\nimport { Button, Card } from '@material-ui/core'\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios'\r\n\r\nconst Home = ({ token, profile }) => {\r\n  const [myToken, setMyToken] = useState(token)\r\n  const [myProfile, setMyProfile] = useState(profile)\r\n  const [myCourse, setMyCourse] = useState([])\r\n  \r\n  const getToken = async () => {\r\n    setMyToken(localStorage.getItem('token'))\r\n  }\r\n\r\n  const getProfile = async () => {\r\n    axios\r\n      .get(`http://localhost:3001/user/profile`, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        setMyProfile(response.data)\r\n    })\r\n  }\r\n\r\n  const getMyCourse = async () => {\r\n    const data = {\r\n      id: myProfile.id\r\n    }\r\n    await axios\r\n      .put(`http://localhost:3001/mycourse`, data)\r\n      .then(response => {\r\n        setMyCourse(response.data)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!token)\r\n      getToken()\r\n    if (!profile)\r\n      getProfile()\r\n    if (myProfile)\r\n      getMyCourse()\r\n  }, [myToken, myProfile])\r\n\r\n  const pickCourse = (courseId) => {\r\n    localStorage.setItem('course', courseId)\r\n    console.log('picked', courseId)\r\n  }\r\n\r\n  if (!myProfile)\r\n    return <></>\r\n  if (!myProfile.id)\r\n    return <></>\r\n  return (\r\n    <div className=\"Tenttilista\">\r\n      <Card className=\"kortti\">\r\n        <div>\r\n          {myProfile.id} | {myProfile.name} | {myProfile.email} | {myProfile.usertype} <br />\r\n        </div>\r\n        <div>\r\n        {myCourse.map(item => <div>\r\n          <Button component={Link} to=\"/exam\" onClick={() => pickCourse(item.id)}> {item.name} </Button>\r\n        </div>)}\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Register.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Course.js",["94"],"import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport CourseEdit from './CourseEdit.js'\r\nimport CourseUser from './CourseUser.js'\r\n\r\nconst Course = ({ token, profile }) => {\r\n  const [myToken, setMyToken] = useState(token)\r\n  const [myProfile, setMyProfile] = useState(profile)\r\n\r\n  const getToken = async () => {\r\n    setMyToken(localStorage.getItem('token'))\r\n  }\r\n\r\n  const getProfile = async () => {\r\n    axios\r\n      .get(`http://localhost:3001/user/profile`, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        setMyProfile(response.data)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!token)\r\n      getToken()\r\n    if (!profile)\r\n      getProfile()\r\n  }, [myToken, myProfile])\r\n\r\n  if (myProfile === undefined)\r\n    return <></>\r\n\r\n  return (\r\n    myProfile.usertype === 'teacher' \r\n    ? <CourseEdit token={myToken} profile={myProfile} /> \r\n    : <CourseUser token={myToken} profile={myProfile} />\r\n  )\r\n}\r\n\r\nexport default Course\r\n","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\CourseUser.js",["95","96","97"],"import { useEffect, useState } from 'react'\r\nimport uuid from 'react-uuid'\r\nimport { Button, TextField, Card } from '@material-ui/core'\r\nimport axios from 'axios'\r\n\r\nconst CourseUser = ({ token, profile }) => {\r\n  const [myCourse, setMyCourse] = useState([])\r\n  const [otherCourse, setOtherCourse] = useState([])\r\n  const [refresh, setRefresh] = useState(false)\r\n\r\n  const getMyCourse = async () => {\r\n    const data = {\r\n      id: profile.id\r\n    }\r\n    await axios\r\n      .put(`http://localhost:3001/mycourse`, data)\r\n      .then(response => {\r\n        setMyCourse(response.data)\r\n    })\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const getOtherCourse = async () => {\r\n    const data = {\r\n      id: profile.id\r\n    }\r\n    await axios\r\n      .put(`http://localhost:3001/othercourse`, data)\r\n      .then(response => {\r\n        setOtherCourse(response.data)\r\n    })\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const joinCourse = async (courseId) => {\r\n    const data = {\r\n      userid: profile.id,\r\n      courseid: courseId\r\n    }\r\n    console.log(courseId)\r\n    await axios.put(`http://localhost:3001/joincourse`, data)\r\n    setRefresh(!refresh)\r\n  }\r\n  const leaveCourse = async (courseId) => {\r\n    const data = {\r\n      userid: profile.id,\r\n      courseid: courseId\r\n    }\r\n    console.log(courseId)\r\n    await axios.put(`http://localhost:3001/leavecourse`, data)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getMyCourse()\r\n    getOtherCourse()\r\n  }, [refresh])\r\n\r\n  return (\r\n    <div className=\"Tenttilista\">\r\n      <Card className=\"kortti\">\r\n        Minun Kurssini\r\n        {myCourse.map(item => <div ><Button onClick={() => leaveCourse(item.id)}> {item.name} </Button></div>)}\r\n        <hr />\r\n        Muut Kurssit\r\n        {otherCourse.map(item => <div ><Button onClick={() => joinCourse(item.id)}> {item.name} </Button></div>)}\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CourseUser\r\n","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\CourseEdit.js",["98","99","100"],"import { useEffect, useState } from 'react'\r\nimport uuid from 'react-uuid'\r\nimport { Button, TextField, Card } from '@material-ui/core'\r\nimport axios from 'axios'\r\n\r\nconst CourseEdit = ({ token, profile }) => {\r\n  const [myCourse, setMyCourse] = useState([])\r\n  const [otherCourse, setOtherCourse] = useState([])\r\n  const [courseName, setCourseName] = useState('')\r\n  const [refresh, setRefresh] = useState(false)\r\n\r\n\r\n  const getMyCourse = async () => {\r\n    const data = {\r\n      id: profile.id\r\n    }\r\n    await axios\r\n      .put(`http://localhost:3001/mycourse`, data)\r\n      .then(response => {\r\n        setMyCourse(response.data)\r\n    })\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const getOtherCourse = async () => {\r\n    const data = {\r\n      id: profile.id\r\n    }\r\n    await axios\r\n      .put(`http://localhost:3001/othercourse`, data)\r\n      .then(response => {\r\n        setOtherCourse(response.data)\r\n    })\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const newCourse = async () => {\r\n    const data = {\r\n      id: profile.id,\r\n      name: courseName\r\n    }\r\n    await axios.put(`http://localhost:3001/newcourse`, data)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const deleteCourse = async (courseId) => {\r\n    const data = {\r\n      id: courseId\r\n    }\r\n    console.log(courseId)\r\n    await axios.put(`http://localhost:3001/deletecourse`, data)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getMyCourse()\r\n    getOtherCourse()\r\n  }, [refresh])\r\n\r\n  const pickCourse =   () => {\r\n    console.log(\"picked\")\r\n  }\r\n\r\n  return (\r\n    <div className=\"Tenttilista\">\r\n      <Card className=\"kortti\">\r\n        {myCourse.map(item => <div>\r\n          <Button onClick={pickCourse}> {item.name} </Button>\r\n          <Button onClick={() => deleteCourse(item.id)} color=\"secondary\" > × </Button>\r\n        </div>)}\r\n        <div>\r\n        <TextField \r\n          label={\"Kurssin Nimi\"}\r\n          style={ {width: '50%'} } \r\n          onChange={ (e) => setCourseName(e.target.value) } \r\n        />\r\n        </div>\r\n        <Button \r\n          onClick={newCourse} \r\n          color=\"primary\" >\r\n            Uusi Kurssi\r\n        </Button>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CourseEdit\r\n","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Footer.js",[],{"ruleId":"101","severity":1,"message":"102","line":91,"column":6,"nodeType":"103","endLine":91,"endColumn":13,"suggestions":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"105","replacedBy":"109"},{"ruleId":"107","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":19,"column":20,"nodeType":"113","messageId":"114","endLine":19,"endColumn":31},{"ruleId":"101","severity":1,"message":"115","line":59,"column":6,"nodeType":"103","endLine":59,"endColumn":26,"suggestions":"116"},{"ruleId":"101","severity":1,"message":"117","line":36,"column":6,"nodeType":"103","endLine":36,"endColumn":26,"suggestions":"118"},{"ruleId":"111","severity":1,"message":"119","line":8,"column":3,"nodeType":"113","messageId":"114","endLine":8,"endColumn":12},{"ruleId":"101","severity":1,"message":"120","line":86,"column":6,"nodeType":"103","endLine":86,"endColumn":23,"suggestions":"121"},{"ruleId":"111","severity":1,"message":"122","line":3,"column":24,"nodeType":"113","messageId":"114","endLine":3,"endColumn":33},{"ruleId":"111","severity":1,"message":"123","line":7,"column":3,"nodeType":"113","messageId":"114","endLine":7,"endColumn":16},{"ruleId":"111","severity":1,"message":"119","line":8,"column":3,"nodeType":"113","messageId":"114","endLine":8,"endColumn":12},{"ruleId":"111","severity":1,"message":"124","line":15,"column":20,"nodeType":"113","messageId":"114","endLine":15,"endColumn":31},{"ruleId":"111","severity":1,"message":"125","line":16,"column":10,"nodeType":"113","messageId":"114","endLine":16,"endColumn":16},{"ruleId":"111","severity":1,"message":"126","line":16,"column":18,"nodeType":"113","messageId":"114","endLine":16,"endColumn":27},{"ruleId":"101","severity":1,"message":"120","line":60,"column":6,"nodeType":"103","endLine":60,"endColumn":23,"suggestions":"127"},{"ruleId":"101","severity":1,"message":"128","line":45,"column":6,"nodeType":"103","endLine":45,"endColumn":26,"suggestions":"129"},{"ruleId":"101","severity":1,"message":"130","line":32,"column":6,"nodeType":"103","endLine":32,"endColumn":26,"suggestions":"131"},{"ruleId":"111","severity":1,"message":"132","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":12},{"ruleId":"111","severity":1,"message":"122","line":3,"column":18,"nodeType":"113","messageId":"114","endLine":3,"endColumn":27},{"ruleId":"101","severity":1,"message":"133","line":57,"column":6,"nodeType":"103","endLine":57,"endColumn":15,"suggestions":"134"},{"ruleId":"111","severity":1,"message":"132","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":12},{"ruleId":"111","severity":1,"message":"135","line":8,"column":10,"nodeType":"113","messageId":"114","endLine":8,"endColumn":21},{"ruleId":"101","severity":1,"message":"133","line":58,"column":6,"nodeType":"103","endLine":58,"endColumn":15,"suggestions":"136"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getProfile' and 'isLogged'. Either include them or remove the dependency array.","ArrayExpression",["137"],"no-native-reassign",["138"],"no-negated-in-lhs",["139"],["138"],["139"],"no-unused-vars","'setCourseId' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getExam', 'getProfile', 'profile', and 'token'. Either include them or remove the dependency array.",["140"],"React Hook useEffect has missing dependencies: 'examId', 'getProfile', 'profile', and 'token'. Either include them or remove the dependency array.",["141"],"'useParams' is defined but never used.","React Hook useEffect has missing dependencies: 'getChoice' and 'getQuestion'. Either include them or remove the dependency array.",["142"],"'TextField' is defined but never used.","'useRouteMatch' is defined but never used.","'setFinished' is assigned a value but never used.","'answer' is assigned a value but never used.","'setAnswer' is assigned a value but never used.",["143"],"React Hook useEffect has missing dependencies: 'getMyCourse', 'getProfile', 'profile', and 'token'. Either include them or remove the dependency array.",["144"],"React Hook useEffect has missing dependencies: 'getProfile', 'profile', and 'token'. Either include them or remove the dependency array.",["145"],"'uuid' is defined but never used.","React Hook useEffect has missing dependencies: 'getMyCourse' and 'getOtherCourse'. Either include them or remove the dependency array.",["146"],"'otherCourse' is assigned a value but never used.",["147"],{"desc":"148","fix":"149"},"no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"154","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"161","fix":"163"},"Update the dependencies array to be: [getProfile, isLogged, token]",{"range":"164","text":"165"},"Update the dependencies array to be: [myToken, myProfile, token, profile, getProfile, getExam]",{"range":"166","text":"167"},"Update the dependencies array to be: [myToken, myProfile, token, profile, getProfile, examId]",{"range":"168","text":"169"},"Update the dependencies array to be: [refresh, examid, getQuestion, getChoice]",{"range":"170","text":"171"},{"range":"172","text":"171"},"Update the dependencies array to be: [myToken, myProfile, token, profile, getProfile, getMyCourse]",{"range":"173","text":"174"},"Update the dependencies array to be: [myToken, myProfile, token, profile, getProfile]",{"range":"175","text":"176"},"Update the dependencies array to be: [getMyCourse, getOtherCourse, refresh]",{"range":"177","text":"178"},{"range":"179","text":"178"},[2112,2119],"[getProfile, isLogged, token]",[1440,1460],"[myToken, myProfile, token, profile, getProfile, getExam]",[895,915],"[myToken, myProfile, token, profile, getProfile, examId]",[2169,2186],"[refresh, examid, getQuestion, getChoice]",[1580,1597],[1086,1106],"[myToken, myProfile, token, profile, getProfile, getMyCourse]",[756,776],"[myToken, myProfile, token, profile, getProfile]",[1453,1462],"[getMyCourse, getOtherCourse, refresh]",[1435,1444]]