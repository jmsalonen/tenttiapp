[{"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\index.js":"1","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\App.js":"2","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\reportWebVitals.js":"3","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Header.js":"4","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Users.js":"5","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Exam.js":"6","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Question.js":"7","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\QuestionEdit.js":"8","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\QuestionUser.js":"9","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\LogIn.js":"10","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Home.js":"11","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Register.js":"12","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Course.js":"13","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\CourseUser.js":"14","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\CourseEdit.js":"15"},{"size":500,"mtime":1609018316715,"results":"16","hashOfConfig":"17"},{"size":2237,"mtime":1609757965683,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":795,"mtime":1610543284429,"results":"20","hashOfConfig":"17"},{"size":2274,"mtime":1609021106062,"results":"21","hashOfConfig":"17"},{"size":4373,"mtime":1610549264152,"results":"22","hashOfConfig":"17"},{"size":1109,"mtime":1610524405953,"results":"23","hashOfConfig":"17"},{"size":3725,"mtime":1610533889197,"results":"24","hashOfConfig":"17"},{"size":2738,"mtime":1608104035490,"results":"25","hashOfConfig":"17"},{"size":741,"mtime":1609750838096,"results":"26","hashOfConfig":"17"},{"size":1772,"mtime":1610538919343,"results":"27","hashOfConfig":"17"},{"size":1367,"mtime":1609751798533,"results":"28","hashOfConfig":"17"},{"size":1034,"mtime":1609749442925,"results":"29","hashOfConfig":"17"},{"size":1901,"mtime":1609750662635,"results":"30","hashOfConfig":"17"},{"size":2187,"mtime":1609730093759,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1uw66iz",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\index.js",[],["69","70"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\App.js",["71"],"import './App.css';\nimport { useEffect, useState } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport axios from 'axios'\n\n//import Users from './Users.js'\nimport Header from './Header.js'\nimport Exam from './Exam.js'\nimport LogIn from './LogIn.js'\nimport Home from './Home.js'\nimport Register from './Register.js'\nimport Course from './Course.js'\n\nconst App = () => {\n  const [token, setToken] = useState()\n  const [isLogged, setIsLogged] = useState(false)\n  const [profile, setProfile] = useState()\n\n  const getProfile = async () => {\n    axios\n      .get(`http://localhost:3001/user/profile`, {\n        headers: {\n          'authorization': `${token}`\n        }\n      })\n      .then(response => {\n        setProfile(response.data)\n    })\n  }\n\n  const logIn = async (userEmail, userPassword) => {\n    const data = {\n      email: userEmail,\n      password: userPassword\n    }\n    await axios\n      .post(`http://localhost:3001/login`, data)\n      .then(response => {\n        setToken(response.data.token)\n        localStorage.setItem('token', response.data.token)\n      })\n      .catch(() => {\n        console.log('Log in Error')\n      })\n  }\n\n  const logOut = async () => {\n    localStorage.removeItem('token')\n    localStorage.removeItem('course')\n    localStorage.removeItem('exam')\n    setToken(null)\n    setProfile(null)\n    setIsLogged(false)\n    /* console.log(localStorage.getItem('token')) */\n  }\n\n  useEffect(() => {\n    setToken(localStorage.getItem('token'))\n    \n    if (token === null) {\n      setIsLogged(false)\n    }\n    else\n      setIsLogged(true)\n\n    if (isLogged)\n      getProfile()\n  }, [token])\n\n  /* if (!profile)\n    return <></>\n */\n  return (\n    <Router>\n      <Header token={token} logOut={logOut} />\n      <Switch>\n        <Route path=\"/exam\">\n          <Exam token={token} profile={profile} />\n        </Route>\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n        <Route path=\"/course\">\n          <Course token={token} />\n        </Route>\n        <Route path=\"/\">\n          {isLogged ? <Home token={token} profile={profile} /> : <LogIn logIn={logIn} />}\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\reportWebVitals.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Header.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Users.js",[],["72","73"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Exam.js",["74","75"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Question.js",["76"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\QuestionEdit.js",["77","78"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\QuestionUser.js",["79","80","81","82","83","84","85"],"import { useEffect, useState } from 'react'\r\nimport uuid from 'react-uuid'\r\nimport { Button, Card, TextField, Checkbox } from '@material-ui/core'\r\nimport { green } from '@material-ui/core/colors'\r\nimport axios from 'axios'\r\nimport {\r\n  useRouteMatch,\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\nconst QuestionUser = ({examid, userid}) => {\r\n\r\n  const [question, setQuestion] = useState([]) \r\n  const [choice, setChoice] = useState([]) \r\n  const [finished, setFinished] = useState(false)\r\n  const [answer, setAnswer] = useState([])\r\n  const [refresh, setRefresh] = useState(false)\r\n  \r\n  const getQuestion = async () => {\r\n    await axios\r\n      .get(`http://localhost:3001/exam/${examid}/question`)\r\n      .then(response => {\r\n        setQuestion(response.data)\r\n    })\r\n  }\r\n\r\n  const getChoice = async () => {\r\n    await axios\r\n      .get(`http://localhost:3001/exam/${examid}/answer/${userid}`)\r\n      .then(response => {\r\n        setChoice(response.data)\r\n        //setFinished(response.data[0].finished)\r\n        //console.log(response.data[0])\r\n    })\r\n  }\r\n\r\n  const putAnswer = async (id, value) => {\r\n    const data = {\r\n      exam: examid,\r\n      user: userid,\r\n      choice: id,\r\n      value: value\r\n    }\r\n    await axios.put(`http://localhost:3001/update/answer/`, data)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const putFinished = async () => {\r\n    const data = {\r\n      exam: examid,\r\n      user: userid\r\n    }\r\n    await axios.put(`http://localhost:3001/finished/`, data)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getQuestion()\r\n    getChoice()\r\n  }, [refresh, examid])\r\n\r\n  return (\r\n    <>\r\n      {question.map(q => \r\n        <Card key={uuid()} className=\"kortti\"> \r\n          <div>\r\n            {q.question}\r\n            {/* // if finished then checkicon else blockicon */}\r\n          </div>\r\n          {choice.filter(filtered => (filtered.questionid === q.id && filtered.choiceid !== null)).map(c => \r\n            <div key={uuid()}>\r\n              <Checkbox\r\n                /* checked={c.answer}\r\n                disabled={ finished }\r\n                id={uuid()} */\r\n                /* onChange={ (e) => putCorrectChoice(c.choiceid, e.target.checked) }  */\r\n                checked={c.answer}\r\n                disabled={ finished }\r\n                onChange={ (e) => putAnswer(c.choiceid, e.target.checked) } \r\n              />\r\n              <Checkbox \r\n                style={{ color: green[500] }}\r\n                checked={c.correct}\r\n              /> \r\n              <label>{c.name}</label>\r\n            </div>\r\n          )}\r\n        </Card>\r\n      )}\r\n      <><Button onClick={putFinished} variant=\"contained\" color=\"primary\" > Valmis </Button></>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default QuestionUser\r\n","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\LogIn.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Home.js",["86"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Register.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Course.js",["87"],"import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport CourseEdit from './CourseEdit.js'\r\nimport CourseUser from './CourseUser.js'\r\n\r\nconst Course = ({ token, profile }) => {\r\n  const [myToken, setMyToken] = useState(token)\r\n  const [myProfile, setMyProfile] = useState(profile)\r\n\r\n  const getToken = async () => {\r\n    setMyToken(localStorage.getItem('token'))\r\n  }\r\n\r\n  const getProfile = async () => {\r\n    axios\r\n      .get(`http://localhost:3001/user/profile`, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        setMyProfile(response.data)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!token)\r\n      getToken()\r\n    if (!profile)\r\n      getProfile()\r\n  }, [myToken, myProfile])\r\n\r\n  if (myProfile === undefined)\r\n    return <></>\r\n\r\n  return (\r\n    myProfile.usertype === 'teacher' \r\n    ? <CourseEdit token={myToken} profile={myProfile} /> \r\n    : <CourseUser token={myToken} profile={myProfile} />\r\n  )\r\n}\r\n\r\nexport default Course\r\n","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\CourseUser.js",["88","89","90"],"import { useEffect, useState } from 'react'\r\nimport uuid from 'react-uuid'\r\nimport { Button, TextField, Card } from '@material-ui/core'\r\nimport axios from 'axios'\r\n\r\nconst CourseUser = ({ token, profile }) => {\r\n  const [myCourse, setMyCourse] = useState([])\r\n  const [otherCourse, setOtherCourse] = useState([])\r\n  const [refresh, setRefresh] = useState(false)\r\n\r\n  const getMyCourse = async () => {\r\n    const data = {\r\n      id: profile.id\r\n    }\r\n    await axios\r\n      .put(`http://localhost:3001/mycourse`, data)\r\n      .then(response => {\r\n        setMyCourse(response.data)\r\n    })\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const getOtherCourse = async () => {\r\n    const data = {\r\n      id: profile.id\r\n    }\r\n    await axios\r\n      .put(`http://localhost:3001/othercourse`, data)\r\n      .then(response => {\r\n        setOtherCourse(response.data)\r\n    })\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const joinCourse = async (courseId) => {\r\n    const data = {\r\n      userid: profile.id,\r\n      courseid: courseId\r\n    }\r\n    console.log(courseId)\r\n    await axios.put(`http://localhost:3001/joincourse`, data)\r\n    setRefresh(!refresh)\r\n  }\r\n  const leaveCourse = async (courseId) => {\r\n    const data = {\r\n      userid: profile.id,\r\n      courseid: courseId\r\n    }\r\n    console.log(courseId)\r\n    await axios.put(`http://localhost:3001/leavecourse`, data)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getMyCourse()\r\n    getOtherCourse()\r\n  }, [refresh])\r\n\r\n  return (\r\n    <div className=\"Tenttilista\">\r\n      <Card className=\"kortti\">\r\n        Minun Kurssini\r\n        {myCourse.map(item => <div ><Button onClick={() => leaveCourse(item.id)}> {item.name} </Button></div>)}\r\n        <hr />\r\n        Muut Kurssit\r\n        {otherCourse.map(item => <div ><Button onClick={() => joinCourse(item.id)}> {item.name} </Button></div>)}\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CourseUser\r\n","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\CourseEdit.js",["91","92","93"],"import { useEffect, useState } from 'react'\r\nimport uuid from 'react-uuid'\r\nimport { Button, TextField, Card } from '@material-ui/core'\r\nimport axios from 'axios'\r\n\r\nconst CourseEdit = ({ token, profile }) => {\r\n  const [myCourse, setMyCourse] = useState([])\r\n  const [otherCourse, setOtherCourse] = useState([])\r\n  const [courseName, setCourseName] = useState('')\r\n  const [refresh, setRefresh] = useState(false)\r\n\r\n\r\n  const getMyCourse = async () => {\r\n    const data = {\r\n      id: profile.id\r\n    }\r\n    await axios\r\n      .put(`http://localhost:3001/mycourse`, data)\r\n      .then(response => {\r\n        setMyCourse(response.data)\r\n    })\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const getOtherCourse = async () => {\r\n    const data = {\r\n      id: profile.id\r\n    }\r\n    await axios\r\n      .put(`http://localhost:3001/othercourse`, data)\r\n      .then(response => {\r\n        setOtherCourse(response.data)\r\n    })\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const newCourse = async () => {\r\n    const data = {\r\n      id: profile.id,\r\n      name: courseName\r\n    }\r\n    await axios.put(`http://localhost:3001/newcourse`, data)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const deleteCourse = async (courseId) => {\r\n    const data = {\r\n      id: courseId\r\n    }\r\n    console.log(courseId)\r\n    await axios.put(`http://localhost:3001/deletecourse`, data)\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getMyCourse()\r\n    getOtherCourse()\r\n  }, [refresh])\r\n\r\n  const pickCourse =   () => {\r\n    console.log(\"picked\")\r\n  }\r\n\r\n  return (\r\n    <div className=\"Tenttilista\">\r\n      <Card className=\"kortti\">\r\n        {myCourse.map(item => <div>\r\n          <Button onClick={pickCourse}> {item.name} </Button>\r\n          <Button onClick={() => deleteCourse(item.id)} color=\"secondary\" > × </Button>\r\n        </div>)}\r\n        <div>\r\n        <TextField \r\n          label={\"Kurssin Nimi\"}\r\n          style={ {width: '50%'} } \r\n          onChange={ (e) => setCourseName(e.target.value) } \r\n        />\r\n        </div>\r\n        <Button \r\n          onClick={newCourse} \r\n          color=\"primary\" >\r\n            Uusi Kurssi\r\n        </Button>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CourseEdit\r\n",{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":72,"column":6,"nodeType":"100","endLine":72,"endColumn":13,"suggestions":"101"},{"ruleId":"94","replacedBy":"102"},{"ruleId":"96","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":19,"column":20,"nodeType":"106","messageId":"107","endLine":19,"endColumn":31},{"ruleId":"98","severity":1,"message":"108","line":59,"column":6,"nodeType":"100","endLine":59,"endColumn":26,"suggestions":"109"},{"ruleId":"98","severity":1,"message":"110","line":36,"column":6,"nodeType":"100","endLine":36,"endColumn":26,"suggestions":"111"},{"ruleId":"104","severity":1,"message":"112","line":8,"column":3,"nodeType":"106","messageId":"107","endLine":8,"endColumn":12},{"ruleId":"98","severity":1,"message":"113","line":86,"column":6,"nodeType":"100","endLine":86,"endColumn":23,"suggestions":"114"},{"ruleId":"104","severity":1,"message":"115","line":3,"column":24,"nodeType":"106","messageId":"107","endLine":3,"endColumn":33},{"ruleId":"104","severity":1,"message":"116","line":7,"column":3,"nodeType":"106","messageId":"107","endLine":7,"endColumn":16},{"ruleId":"104","severity":1,"message":"112","line":8,"column":3,"nodeType":"106","messageId":"107","endLine":8,"endColumn":12},{"ruleId":"104","severity":1,"message":"117","line":15,"column":20,"nodeType":"106","messageId":"107","endLine":15,"endColumn":31},{"ruleId":"104","severity":1,"message":"118","line":16,"column":10,"nodeType":"106","messageId":"107","endLine":16,"endColumn":16},{"ruleId":"104","severity":1,"message":"119","line":16,"column":18,"nodeType":"106","messageId":"107","endLine":16,"endColumn":27},{"ruleId":"98","severity":1,"message":"113","line":60,"column":6,"nodeType":"100","endLine":60,"endColumn":23,"suggestions":"120"},{"ruleId":"98","severity":1,"message":"121","line":45,"column":6,"nodeType":"100","endLine":45,"endColumn":26,"suggestions":"122"},{"ruleId":"98","severity":1,"message":"123","line":32,"column":6,"nodeType":"100","endLine":32,"endColumn":26,"suggestions":"124"},{"ruleId":"104","severity":1,"message":"125","line":2,"column":8,"nodeType":"106","messageId":"107","endLine":2,"endColumn":12},{"ruleId":"104","severity":1,"message":"115","line":3,"column":18,"nodeType":"106","messageId":"107","endLine":3,"endColumn":27},{"ruleId":"98","severity":1,"message":"126","line":57,"column":6,"nodeType":"100","endLine":57,"endColumn":15,"suggestions":"127"},{"ruleId":"104","severity":1,"message":"125","line":2,"column":8,"nodeType":"106","messageId":"107","endLine":2,"endColumn":12},{"ruleId":"104","severity":1,"message":"128","line":8,"column":10,"nodeType":"106","messageId":"107","endLine":8,"endColumn":21},{"ruleId":"98","severity":1,"message":"126","line":58,"column":6,"nodeType":"100","endLine":58,"endColumn":15,"suggestions":"129"},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getProfile' and 'isLogged'. Either include them or remove the dependency array.","ArrayExpression",["132"],["130"],["131"],"no-unused-vars","'setCourseId' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getExam', 'getProfile', 'profile', and 'token'. Either include them or remove the dependency array.",["133"],"React Hook useEffect has missing dependencies: 'examId', 'getProfile', 'profile', and 'token'. Either include them or remove the dependency array.",["134"],"'useParams' is defined but never used.","React Hook useEffect has missing dependencies: 'getChoice' and 'getQuestion'. Either include them or remove the dependency array.",["135"],"'TextField' is defined but never used.","'useRouteMatch' is defined but never used.","'setFinished' is assigned a value but never used.","'answer' is assigned a value but never used.","'setAnswer' is assigned a value but never used.",["136"],"React Hook useEffect has missing dependencies: 'getMyCourse', 'getProfile', 'profile', and 'token'. Either include them or remove the dependency array.",["137"],"React Hook useEffect has missing dependencies: 'getProfile', 'profile', and 'token'. Either include them or remove the dependency array.",["138"],"'uuid' is defined but never used.","React Hook useEffect has missing dependencies: 'getMyCourse' and 'getOtherCourse'. Either include them or remove the dependency array.",["139"],"'otherCourse' is assigned a value but never used.",["140"],"no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"147","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"154","fix":"156"},"Update the dependencies array to be: [getProfile, isLogged, token]",{"range":"157","text":"158"},"Update the dependencies array to be: [myToken, myProfile, token, profile, getProfile, getExam]",{"range":"159","text":"160"},"Update the dependencies array to be: [myToken, myProfile, token, profile, getProfile, examId]",{"range":"161","text":"162"},"Update the dependencies array to be: [refresh, examid, getQuestion, getChoice]",{"range":"163","text":"164"},{"range":"165","text":"164"},"Update the dependencies array to be: [myToken, myProfile, token, profile, getProfile, getMyCourse]",{"range":"166","text":"167"},"Update the dependencies array to be: [myToken, myProfile, token, profile, getProfile]",{"range":"168","text":"169"},"Update the dependencies array to be: [getMyCourse, getOtherCourse, refresh]",{"range":"170","text":"171"},{"range":"172","text":"171"},[1659,1666],"[getProfile, isLogged, token]",[1440,1460],"[myToken, myProfile, token, profile, getProfile, getExam]",[895,915],"[myToken, myProfile, token, profile, getProfile, examId]",[2169,2186],"[refresh, examid, getQuestion, getChoice]",[1580,1597],[1086,1106],"[myToken, myProfile, token, profile, getProfile, getMyCourse]",[756,776],"[myToken, myProfile, token, profile, getProfile]",[1453,1462],"[getMyCourse, getOtherCourse, refresh]",[1435,1444]]